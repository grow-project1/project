@model IEnumerable<projeto.Models.Desconto>

@{
    var english = Context.Request.Cookies["language"] == "en" || Context.Request.Cookies["language"] == null;
}

@{
    ViewData["Title"] = "Descontos";
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success-discount" style="position: fixed; top: 90px; left: 50%; transform: translate(-50%, -50%); padding: 9px 17px; background-color: lightgreen; color: white; justify-content: center;">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorMessage" class="alert alert-danger" style="position: fixed; top: 90px; left: 50%; transform: translate(-50%, -50%); padding: 9px 17px; background-color: tomato; color: white; justify-content: center;">
        @TempData["ErrorMessage"]
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Função para remover as mensagens com fade após 3 segundos
        function fadeOutMessage(elementId) {
            let message = document.getElementById(elementId);
            if (message) {
                setTimeout(() => {
                    message.style.transition = "opacity 1s ease-in-out";  // Adiciona a transição de fade
                    message.style.opacity = 0;  // Aplica o fade-out
                    setTimeout(() => message.remove(), 1000);  // Remove o elemento após o fade
                }, 3000);  // Espera 3 segundos antes de começar o fade
            }
        }

        // Chama a função para as mensagens de sucesso e erro
        if (document.getElementById("successMessage")) {
            fadeOutMessage("successMessage");
        }
        if (document.getElementById("errorMessage")) {
            fadeOutMessage("errorMessage");
        }
    });
</script>

<div class="descontos-container" style="width: 800px; margin: 0 auto;">
    <br />
    <br />
    <br />
    <br />
    <br />

    <table class="table">
        <thead>
            <tr>
                <th>@(english ? "Description" : "Descrição")</th>
                <th>@(english ? "Value" : "Valor")</th>
                <th>@(english ? "Required Points" : "Pontos Necessários")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Where(d => d.IsLoja))
            {
                <tr>
                    <td>@item.Descricao</td>
                    <td>@item.Valor%</td>
                    <td>@item.PontosNecessarios</td>
                    <td>
                        <a href="#" class="btn-redeem-discount" onclick="abrirModal('@Url.Action("RedeemDesconto", new { id = item.DescontoId })', '@item.Descricao', '@item.Valor')">@(english ? "Redeem" : "Resgatar")</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <!-- Modal com tamanho reduzido -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">
                    @(english ? "Confirm" : "Confirmar")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <!-- Texto centralizado -->
                <div>
                    <strong>@(english ? "Discount" : "Desconto"):</strong>
                    <span id="modalDescricao"></span>
                </div>
                <div>
                    <strong>@(english ? "Amount to Spend" : "Serão gastos"):</strong>
                    <span id="modalPontosNecessarios"></span><span>@(english ? " points" : " pontos")</span>
                </div>
                <br />
                <p>
                    @(english ? "Are you sure you want to redeem the discount?" : "Tem certeza que deseja resgatar o desconto?")
                </p>
            </div>
            <div class="modal-footer d-flex justify-content-center w-100">
                <button type="button" class="btn btn-primary" style="background-color: #28a745; color: white; border: 1px solid #28a745; width: 80%; height: 50px; padding: 10px 0; font-size: 16px;" id="confirmResgate">
                    @(english ? "Yes" : "Confirmar")
                </button>
                <button type="button" class="btn btn-secondary" style="background-color: red; color: white; border: 1px solid red; width: 80%; height: 50px; padding: 10px 0; font-size: 16px;" data-bs-dismiss="modal">
                    @(english ? "Cancel" : "Cancelar")
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let urlResgate = '';
        let descricaoDesconto = '';
        let valorDesconto = '';

        // Função para abrir o modal e armazenar o URL do resgate e os dados do desconto
        function abrirModal(url, descricao, valor) {
            urlResgate = url;
            descricaoDesconto = descricao;
            valorDesconto = valor;

            // Atualiza os valores no modal
            document.getElementById('modalDescricao').innerText = descricaoDesconto;
            document.getElementById('modalPontosNecessarios').innerText = valorDesconto;

            var myModal = new bootstrap.Modal(document.getElementById('confirmModal'), {
                keyboard: false
            });
            myModal.show(); // Exibe o modal
        }

        // Função para confirmar e redirecionar
        document.getElementById('confirmResgate').addEventListener('click', function() {
            window.location.href = urlResgate; // Redireciona para o URL do resgate
        });
    </script>
}