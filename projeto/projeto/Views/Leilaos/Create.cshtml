@model projeto.Models.Leilao

@{
    var english = Context.Request.Cookies["language"] == "en" || Context.Request.Cookies["language"] == null;
    ViewData["Title"] = english ? "Create Auction" : "Criar Leilão";
}

<div class="auction-container">
    <h1 class="page-title">@((english ? "Create Auction" : "Criar Leilão"))</h1>
    
    <form asp-action="Create" method="post" enctype="multipart/form-data" class="auction-form" novalidate>

        <div class="section-title">
            <h4>@(english ? "Auction Information" : "Informações do Leilão")</h4>
        </div>

        <div class="form-group">
            <label asp-for="Item.fotoo" class="form-label">@((english ? "Upload Photo" : "Carregar Foto")) <span style="color: #FF4500;">*</span></label>
            <div class="file-input">
                <input asp-for="Item.fotoo" class="custom-file-input" id="customFile" accept=".jpg, .jpeg, .png"  onchange="updateFileName()" />
                <label class="custom-file-label" for="customFile">@((english ? "Choose file" : "Escolher arquivo"))</label>
                <span id="fileName" class="file-name"></span>
            </div>
            <span asp-validation-for="Item.fotoo" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="DataFim" class="form-label">@((english ? "End Date" : "Data de Fim")) <span style="color: #FF4500;">*</span></label>
            <input asp-for="DataFim" class="form-control" type="datetime-local" required />
            <span asp-validation-for="DataFim" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ValorIncrementoMinimo" class="form-label">@((english ? "Minimum Increment Value" : "Valor de Incremento Mínimo")) <span style="color: #FF4500;">*</span></label>
            <input asp-for="ValorIncrementoMinimo" class="form-control" type="number" required min="1" />
            <span asp-validation-for="ValorIncrementoMinimo" class="text-danger"></span>
        </div>

        <div class="section-title">
            <h4>@(english ? "Item Information" : "Informações do Item")</h4>
        </div>

        <div class="form-group">
            <label asp-for="Item.Titulo" class="form-label">@((english ? "Title" : "Título")) <span style="color: #FF4500;">*</span></label>
            <input asp-for="Item.Titulo" class="form-control" required />
            <span asp-validation-for="Item.Titulo" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Item.Descricao" class="form-label">@((english ? "Description" : "Descrição")) <span style="color: #FF4500;">*</span></label>
            <textarea asp-for="Item.Descricao" class="form-control" required></textarea>
            <span asp-validation-for="Item.Descricao" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Item.PrecoInicial" class="form-label">@((english ? "Starting Price" : "Preço Inicial")) <span style="color: #FF4500;">*</span></label>
            <input asp-for="Item.PrecoInicial" class="form-control" type="number" required min="0.1" />
            <span asp-validation-for="Item.PrecoInicial" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Item.Categoria" class="form-label">@((english ? "Category" : "Categoria")) <span style="color: #FF4500;">*</span></label>
            <select asp-for="Item.Categoria" class="form-control" asp-items="ViewBag.Categorias" required>
                <option value="">@(english ? "-- Select a Category --" : "-- Selecione uma Categoria --")</option>
            </select>
            <span asp-validation-for="Item.Categoria" class="text-danger"></span>
        </div>

        <input type="hidden" asp-for="UtilizadorId" value="@ViewData["UserId"]" />

        <div class="form-submit">
            <input type="submit" value="@(english ? "Create" : "Criar")" class="btn btn-submit" />
        </div>
    </form>

    <div class="back-link">
        <a asp-action="Index">@((english ? "Back to List" : "Voltar para a lista"))</a>
    </div>
</div>

@section Scripts {
    <script>
        function updateFileName() {
            var input = document.getElementById('customFile');
            var fileName = input.files && input.files[0] ? input.files[0].name : '';
            var label = document.querySelector('.custom-file-label');
            var fileNameDisplay = document.getElementById('fileName');
            fileNameDisplay.textContent = fileName ? `(${fileName})` : ''; // Atualiza o nome do arquivo ao lado
            label.textContent = fileName ? fileName : '@((english ? "Choose file" : "Escolher arquivo"))'; // Atualiza o texto do label
        }

            document.addEventListener("DOMContentLoaded", function () {
            var dataFimInput = document.querySelector('input[name="DataFim"]');

            var language = document.cookie.replace(/(?:(?:^|.*;\s*)language\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            var english = (language === "en" || language === "");

            function setMinDate() {
                var now = new Date();
                var year = now.getFullYear();
                var month = String(now.getMonth() + 1).padStart(2, '0');
                var day = String(now.getDate()).padStart(2, '0');
                var hours = String(now.getHours()).padStart(2, '0');
                var minutes = String(now.getMinutes()).padStart(2, '0');

                var minDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
                dataFimInput.setAttribute("min", minDateTime);
            }

            function validateDate() {
                var selectedDate = new Date(dataFimInput.value);
                var now = new Date();

                if (selectedDate <= now) {
                    var errorMessage = english
                        ? "The end date must be in the future."
                        : "A data de fim deve ser no futuro.";

                    alert(errorMessage);
                    dataFimInput.value = "";
                }
            }

            setMinDate();
            dataFimInput.addEventListener("focus", setMinDate);
            dataFimInput.addEventListener("change", validateDate);
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

